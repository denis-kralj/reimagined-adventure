@using Microsoft.AspNetCore.SignalR.Client
@using ReimaginedAdventure.Shared

@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@implements IAsyncDisposable

<div class="form-group">
    <label>
        Message:
        <input @bind="messageInput" size="50" />
    </label>
</div>
<p><button @onclick="Send" disabled="@(!IsConnected)">Send</button> as @userName (<a @onclick="EditUserHandle">Adjust</a>)</p>

@code {
    private HubConnection hubConnection;
    private string userName = Guid.NewGuid().ToString();
    private string messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .Build();

        await hubConnection.StartAsync();

        if(await localStorage.ContainKeyAsync(LocalStorageKeys.UserData))
        {
            var userData = await localStorage.GetItemAsync<User>(LocalStorageKeys.UserData);

            userName = userData.Handle;
        }
    }

    void EditUserHandle() => NavigationManager.NavigateTo("/EditUserHandle");
    Task Send() =>
        hubConnection.SendAsync("SendMessage", userName, messageInput);

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}
