@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@implements IAsyncDisposable

<div class="form-group">
    <label>
        Message:
        <input @bind="messageInput" @onkeyup="MessageInputHandler" size="50" />
    </label>
</div>
<p><button @onclick="Send" disabled="@(!CanSend)">Send</button> as @User.Handle (<a
        href="@(PageLinks.EditUserData)">Adjust</a>)</p>

@code {
    private HubConnection hubConnection;
    private User User = new User();
    private string messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri(UriSegments.ChatHub))
            .Build();

        await hubConnection.StartAsync();

        User = await localStorage.GetItemAsync<User>(LocalStorageKeys.UserData);

    }

    async Task Send()
    {
        await hubConnection.SendAsync("SendMessage", User, messageInput);
        messageInput = string.Empty;
    }

    async Task MessageInputHandler(KeyboardEventArgs args)
    {
        if (args.Key == "Enter" && CanSend) await Send();
    }

    public bool CanSend =>
        hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}
